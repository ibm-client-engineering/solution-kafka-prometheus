apiVersion: v1
kind: Pod
metadata:
  name: kafka1-pod
  labels:
     app: kafka1-pod
  annotations:
    "prometheus.io/scrape": "true"
    "prometheus.io/port": "19000"        

spec:
      containers:
      - name: kafka1-pod-0
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        - containerPort: 9999
        env:
        - name: KAFKA_OPTS
          value: -javaagent:/shared-volume/jmx_prometheus_javaagent.jar=19000:/shared-volume/configs/kafka-config.yaml          
        - name: KAFKA_JMX_OPTS
          #value: "-Dcom.sun.management.jmxremote=true   -Dcom.sun.management.jmxremote.port=9999   -Dcom.sun.management.jmxremote.authenticate=false   -Dcom.sun.management.jmxremote.ssl=false"
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=k8s-kafkajmx-kafka1-af652f4188-1a664c27aa4d0461.elb.us-east-1.amazonaws.com -Dcom.sun.management.jmxremote.rmi.port=9999"
        - name: JMX_PORT
          value: "9999"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "k8s-kafkajmx-kafka1-af652f4188-1a664c27aa4d0461.elb.us-east-1.amazonaws.com"
#          value: "kafka1-pod.kafka-jmx-monitor.pod.cluster.local"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181,zoo2:2181,zoo3:2181
#        - name: KAFKA_CREATE_TOPICS
#          value: purchases:1:1         
        - name:  KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: 'true'           
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      initContainers:
      - name: prometheus-jmx-exporter
        image: spdigital/prometheus-jmx-exporter-kubernetes:0.3.1
        env:
        - name: SHARED_VOLUME_PATH
          value: /shared-volume
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      volumes:
      - name: shared-volume
        emptyDir: {}          
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka2-pod
  labels:
     app: kafka2-pod
  annotations:
    "prometheus.io/scrape": "true"
    "prometheus.io/port": "19000"        
spec:
      containers:
      - name: kafka2-pod-0
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        - containerPort: 9999
        env:
        - name: KAFKA_OPTS
          value: -javaagent:/shared-volume/jmx_prometheus_javaagent.jar=19000:/shared-volume/configs/kafka-config.yaml          
        - name: KAFKA_JMX_OPTS
#          value: "-Dcom.sun.management.jmxremote=true   -Dcom.sun.management.jmxremote.port=9999   -Dcom.sun.management.jmxremote.authenticate=false   -Dcom.sun.management.jmxremote.ssl=false"
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999"
        - name: JMX_PORT
          value: "9999"
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
#          value: "kafka2-pod"
          value: "k8s-kafkajmx-kafka2-4c9b62526e-d0000022df5dcde0.elb.us-east-1.amazonaws.com"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181,zoo2:2181,zoo3:2181
        - name:  KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: 'true'           
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      initContainers:
      - name: prometheus-jmx-exporter
        image: spdigital/prometheus-jmx-exporter-kubernetes:0.3.1
        env:
        - name: SHARED_VOLUME_PATH
          value: /shared-volume
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      volumes:
      - name: shared-volume
        emptyDir: {}    
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka3-pod
  labels:
     app: kafka3-pod
  annotations:
    "prometheus.io/scrape": "true"
    "prometheus.io/port": "19000"        
spec:
      containers:
      - name: kafka3-pod-0
        image: wurstmeister/kafka
        ports:
        - containerPort: 9092
        - containerPort: 9999
        env:
        - name: KAFKA_OPTS
          value: -javaagent:/shared-volume/jmx_prometheus_javaagent.jar=19000:/shared-volume/configs/kafka-config.yaml          
        - name: KAFKA_JMX_OPTS
#          value: "-Dcom.sun.management.jmxremote=true   -Dcom.sun.management.jmxremote.port=9999   -Dcom.sun.management.jmxremote.authenticate=false   -Dcom.sun.management.jmxremote.ssl=false"
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999"
        - name: JMX_PORT
          value: "9999"
        - name: KAFKA_BROKER_ID
          value: "3"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
#          value: "kafka2-pod"
          value: "k8s-kafkajmx-kafka3-c4287d8998-a52e4aeb9aa9190a.elb.us-east-1.amazonaws.com"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181,zoo2:2181,zoo3:2181
        - name:  KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: 'true'
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: 'true'           
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      initContainers:
      - name: prometheus-jmx-exporter
        image: spdigital/prometheus-jmx-exporter-kubernetes:0.3.1
        env:
        - name: SHARED_VOLUME_PATH
          value: /shared-volume
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      volumes:
      - name: shared-volume
        emptyDir: {}    